.TH "tests/tests_arithmetic_lexer.c" 3 "Mon May 25 2020" "Version v0.1" "42h" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tests/tests_arithmetic_lexer.c
.SH SYNOPSIS
.br
.PP
\fC#include <criterion/criterion\&.h>\fP
.br
\fC#include '\&.\&./expansion/arithmetic/lexer/arithmetic_lexer\&.h'\fP
.br
\fC#include '\&.\&./garbage_collector/garbage_collector\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBshould_fail\fP (char *exp)"
.br
.ti -1c
.RI "void \fBprint_tokens\fP (char *exp)"
.br
.ti -1c
.RI "\fBTest\fP (\fBarithmetic_lexer\fP, basic)"
.br
.ti -1c
.RI "\fBTest\fP (\fBarithmetic_lexer\fP, medium)"
.br
.ti -1c
.RI "\fBTest\fP (\fBarithmetic_lexer\fP, hard)"
.br
.ti -1c
.RI "\fBTest\fP (\fBarithmetic_lexer\fP, fails)"
.br
.ti -1c
.RI "\fBTest\fP (\fBarithmetic_lexer\fP, successes)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void print_tokens (char * exp)"

.SS "bool should_fail (char * exp)"

.SS "Test (\fBarithmetic_lexer\fP, basic)"

.SS "Test (\fBarithmetic_lexer\fP, medium)"

.SS "Test (\fBarithmetic_lexer\fP, hard)"

.SS "Test (\fBarithmetic_lexer\fP, fails)"

.SS "Test (\fBarithmetic_lexer\fP, successes)"

.SH "Author"
.PP 
Generated automatically by Doxygen for 42h from the source code\&.
