####################################################### TEST BASE ####################################################### 
- description:
    - name: BASE
    - stdin: "\n"                               
      checks:
        - returncode
        - stdout
      
    - stdin: gdjklgndgdl
      checks:
        - has_stderr

###################################################### TEST ECHO ####################################################### 
- description:
  - name: ECHO
  - stdin: echo
    checks:
      - returncode
      - stdout
  - stdin: echo toto
    checks:
      - returncode
      - stdout
  - stdin: echo
    checks:
      - returncode
      - stdout
  - stdin: echo -e abcd\flol\\n
    checks:
      - returncode
      - stdout
  - stdin: echo -en abcd\flol\\n lol
    checks:
      - stdout
  - stdin: echo -nnnnn abcd\flol\\n lol
    checks:
      - stdout
  - stdin: echo -u abcd
    checks:
      - stdout 
  - stdin: echo toto;
    checks:
      - returncode
      - stdout
  - stdin: echo toto;echo tata;echo tati
    checks:
      - returncode
      - stdout

####################################################### TEST LS ########################################################
- description:
  - name: LS
  - stdin: ls
    checks:
      - returncode
      - stdout
  - stdin: ls;
    checks:
      - returncode
      - stdout
  - stdin: ls -la
    checks:
      - returncode
      - stdout
  - stdin: ls Makefile
    checks:
      - returncode
      - stdout
  - stdin: ls -lt
    checks:
      - returncode
      - stdout
  - stdin: ls -a
    checks:
      - returncode
      - stdout

  # - stdin: ls -l *.sh
  #   checks:
  #     - returncode
  #     - has_stderr

  - stdin: ls;ls -l ;ls -a;ls -la
    checks:
      - returncode
      - stdout

  - stdin: ls gjkdghkdfg
    checks:
      - has_stderr

####################################################### TEST CAT ########################################################
- description:
  - name: CAT
  - stdin: cat Makefile
    checks:
      - returncode
      - stdout

  - stdin: cat Makefile;
    checks:
      - returncode
      - stdout

  - stdin: cat Makefile;cat Makefile;cat Makefile
    checks:
      - returncode
      - stdout

####################################################### TEST CD ########################################################
- description:
  - name: CD
  - stdin: cd
    checks:
      - returncode
      - stdout

  - stdin: cd ../
    checks:
      - returncode
      - stdout

  # - stdin: cd fdklsfhsd
  #   checks:
  #     - has_stderr

####################################################### TEST PIPELINE ########################################################
- description:
  - name: PIPELINE
  - stdin: echo toto | echo tata
    checks:
      - returncode
      - stdout

  - stdin: echo toto | echo tata | echo tati
    checks:
      - returncode
      - stdout

  - stdin: echo toto | ls
    checks:
      - returncode
      - stdout

  - stdin: cat Makefile | grep -i a
    checks:
      - returncode
      - stdout

  - stdin: cat Makefile | grep -i a | echo toto | echo tata | echo tati
    checks:
      - returncode
      - stdout

  - stdin: echo toto | kdsfs
    checks:
      - has_stderr
  
####################################################### TEST LOGICAL ########################################################
- description:
  - name: LOGICAL
  - stdin: echo toto || echo tata
    checks:
      - returncode
      - stdout
    
  - stdin: echo toto || echo tata || echo tati
    checks:
    - returncode
    - stdout
    
  - stdin: echo toto && ls
    checks:
      - returncode
      - stdout
    
  # - stdin: echo toto && ls && tree
  #   checks:
  #     - returncode
  #     - stdout
    
  # - stdin: echo toto && ls && tree && echo tati
  #   checks:
  #     - returncode
  #     - stdout
    
  # - stdin: echo toto && ls || tree && echo tati || ls -la
  #   checks:
  #     - returncode
  #     - stdout
  - stdin: echo toto || gfdkgjfl
    checks:
      - returncode
      - stdout


####################################################### TEST CONDITION ########################################################
- description:
  - name : CONDITION
  - stdin: if echo toto; then echo success; else echo failed; fi
    checks:
      - returncode
      - stdout

  - stdin: if cat shgldsg; then echo success; elif ls; then echo success; else echo failed; fi
    checks:
      - returncode
      - stdout

  - stdin: if cat shgldsg; then echo success; elif cat urilezrhze; then echo success; elif ls; then echo success; else echo failed; fi
    checks:
      - returncode
      - stdout

  - stdin: if cat shgldsg; then echo success; elif ls; then echo success; else echo failed; fi
    checks:
      - returncode
      - stdout

  - stdin: if cat shgldsg; then echo success; elif cat urilezrhze; then echo success; elif ls; then echo success; else echo failed; fi
    checks:
      - returncode
      - stdout

  ####################################################### TEST VARIABLES ########################################################
- description:
  - name : VARIABLES
  - stdin: a=42; echo $a
    checks:
      - returncode
      - stdout

  - stdin: long=hello;long2=world;echo $long$long2
    checks:
      - returncode
      - stdout

  ####################################################### TEST TILDE ########################################################
- description:
  - name : TILDE
  - stdin: echo ~
    checks:
      - returncode
      - stdout

  - stdin: echo ~+
    checks:
      - returncode
      - stdout

  - stdin: echo ~-
    checks:
      - returncode
      - stdout

  - stdin: echo ~/more/again
    checks:
      - returncode
      - stdout

  - stdin: echo ~+/more/again
    checks:
      - returncode
      - stdout

  - stdin: echo ~-/more/again
    checks:
      - returncode
      - stdout

  - stdin: echo ~stuck
    checks:
      - returncode
      - stdout

  - stdin: echo ~+stuck
    checks:
      - returncode
      - stdout

  - stdin: echo ~-stuck
    checks:
      - returncode
      - stdout

  - stdin: echo start/~/more/again
    checks:
      - returncode
      - stdout

  - stdin: echo start/~+/more/again
    checks:
      - returncode
      - stdout

  - stdin: echo start/~-/more/again
    checks:
      - returncode
      - stdout



  ####################################################### TEST FOR ########################################################
- description:
  - name : FOR
  - stdin: for i in 1 2 3; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: for i in 1 2 3; do echo $i; done
    checks:
      - returncode
      - stdout
  - stdin: for i in range 1 2 3; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: for i in range 1 2 3; do echo $i; done
    checks:
      - returncode
      - stdout
  - stdin: for animal in lion cat dog elephant rat; do echo $animal; done
    checks:
      - returncode
      - stdout
  - stdin: for animal in lion cat dog elephant rat; do echo $animal;echo number; done
    checks:
      - returncode
      - stdout
  - stdin: for i in {0..9}; do echo toto;done
    checks:
      - returncode
      - stdout
  - stdin: for i in {0..9}; do echo $i;done
    checks:
      - returncode
      - stdout
  - stdin: for i in {0.9}; do echo $i;done
    checks:
      - returncode
      - has_stderr
      - stdout
  - stdin: for i in {0..9}}; do echo $i;done
    checks:
      - returncode
      - has_stderr
      - stdout
  
####################################################### TEST UNTIL ########################################################
- description:
  - name : UNTIL
  - stdin: until echo a; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: until echo a; do echo toto;echo tati;echo titi; done
    checks:
      - returncode
      - stdout
  - stdin: until echo a && echo b && echo c; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: until a=b; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: until echo a && echo b && echo c; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: until echo a | echo b | echo c; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: until echo a && echo b && echo c | echo d || echo e; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: until cat< test_suite.py; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: until ! cat<fdjlkghfdg; do echo toto;done
    checks:
      - returncode
      - has_stderr
      - stdout
  - stdin: until echo a && ! cat<gldghdfh; do echo toto;done
    checks:
      - returncode
      - has_stderr
      - stdout
  - stdin: until echo a | echo b; do echo toto;done
    checks:
      - returncode
      - has_stderr
      - stdout
  - stdin: until ls && ! cat<fdslhgsd; do echo toto;done
    checks:
      - returncode
      - has_stderr
      - stdout

####################################################### TEST WHILE ########################################################
- description:
  - name : WHILE
  - stdin: while ! echo a; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: while ! echo a; do echo toto;echo tati;echo titi; done
    checks:
      - returncode
      - stdout
  - stdin: while ! echo a && echo b && echo c; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: while ! a=b; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: while echo a && ! echo b && echo c; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: while ! echo a | echo b | echo c; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: while ! echo a && echo b && echo c | echo d || ! echo e; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: while cat<u; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: while cat<u; do echo toto; done
    checks:
      - returncode
      - stdout
  - stdin: while cat<fdjlkghfdg; do echo toto;done
    checks:
      - returncode
      - has_stderr
      - stdout
  - stdin: while echo a && cat<gldghdfh; do echo toto;done
    checks:
      - returncode
      - has_stderr
      - stdout
  - stdin: while ! echo a | echo b; do echo toto;done
    checks:
      - returncode
      - has_stderr
      - stdout
  - stdin: while ls && cat<fdslhgsd; do echo toto;done
    checks:
      - returncode
      - has_stderr
      - stdout

####################################################### TEST CASE_ITEM AND CASE_CLAUSE ########################################################
- description:
  - name : CASE_ITEM
  - stdin: case lion in esac
    checks:
      - returncode
      - stdout
  - stdin: case lion in lion ) echo success; ;; esac
    checks:
      - returncode
      - stdout
  - stdin: case lion in lion | elephant ) echo success; ;; esac
    checks:
      - returncode
      - stdout
  - stdin: case lion in lion | elephant | rat ) echo success; ;; esac
    checks:
      - returncode
      - stdout
  - stdin: case lion in lion ) echo success; echo tati; ;; esac
    checks:
      - returncode
      - stdout
  - stdin: case lion in elephant ) echo failed; ;; lion ) echo success; ;; esac
    checks:
      - returncode
      - stdout
  - stdin: case lion in elephant | rat ) echo failed; ;; lion | dog | cat ) echo success; ;; esac
    checks:
      - returncode
      - stdout
  - stdin: case lion in elephant | rat ) echo failed; ;; dog | cat ) echo failed 2; ;; bugs | lion ) ;; esac
    checks:
      - returncode
      - stdout
  - stdin: $a=1; case $1 in elephant | rat ) echo failed; ;; lion | 1 ) echo success; ;; esac
    checks:
      - returncode
      - stdout
  # - stdin: while cat<fdjlkghfdg; do echo toto;done
  #   checks:
  #     - returncode
  #     - has_stderr
  #     - stdout
  # - stdin: while echo a && cat<gldghdfh; do echo toto;done
  #   checks:
  #     - returncode
  #     - has_stderr
  #     - stdout
  # - stdin: while ! echo a | echo b; do echo toto;done
  #   checks:
  #     - returncode
  #     - has_stderr
  #     - stdout
  # - stdin: while ls && cat<fdslhgsd; do echo toto;done
  #   checks:
  #     - returncode
  #     - has_stderr
  #     - stdout

  ####################################################### TEST COMMAND SUBSTITUTION ########################################################
- description:
  - name : CMD_SUB
  - stdin: cd ~; echo $(ls)
    checks:
      - returncode
      - stdout
  - stdin: echo $(echo toto)
    checks:
      - returncode
      - stdout
  - stdin: cd ~;echo $(ls -l)
    checks:
      - returncode
      - stdout
  - stdin: cd ~;echo word$(pwd)word
    checks:
      - returncode
      - stdout
  # - stdin: cd ~;echo $((ls -l)) # TODO
  #   checks:
  #     - returncode
  #     - stdout
  - stdin: cd ~;echo $((((ls))))
    checks:
      - returncode
      - stdout
  - stdin: cd ~;echo $(ls))
    checks:
      - returncode
      - stdout
      - has_stderr
